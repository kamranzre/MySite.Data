@using MySite.Entity.Models.PersonModel
<div class="k-rtl ">
    @(Html.Kendo().Grid<PersonCreateOrEditModel>()
        .Name("grid_Person")
        .Columns(columns =>
        {


            columns.Bound(c => c.Name)
            .Sortable(true)
            .Filterable(true)
            .Width(140);

            columns.Bound(c => c.FName)
            .Sortable(true)
            .Filterable(true)
            .Width(140);

            columns.Bound(c => c.NationalCode)
            .Sortable(true)
            .Filterable(true)
            .Width(140);

            columns.Bound(c => c.PhoneNumber)
            // .ClientTemplate("<div style='text-align:center;'>#=EnterDateEngStr#</div>")
            .Sortable(true)
            .Filterable(true)
            .Width(140);



            columns.Bound(c => c.Id)
                                    .ClientTemplate("<div style='text-align:center'><a id='btn-new' class='btn btn-blue' onclick='OpenWindowEdit(\"#=Id#\", \"/Person/Edit\")'><i class='fa fa-edit'></i>Edit</a></div>")
                                    .Title("Edit")
                                    .Width(50)
                                    .Filterable(false)
                                    .Sortable(false)
                                    .Groupable(false);


            columns.Bound(c => c.Id)
                   .ClientTemplate("<div style='text-align:center'><span data-popup='tooltip' data-original-title='حذف'  onclick='DeleteAlert(\"Person\",#=Id#)'><i class='fas fa-trash' style='color:red'></i></span></div>")
                   .Title("Delete")
                   .Width(50)
                   .Filterable(false)
                   .Sortable(false)
                   .Groupable(false);
        })
        .Sortable()
    .Selectable()
    .Scrollable(x => x.Height("auto"))
    .Filterable()
    .HtmlAttributes(new { @class = "" })
                //  .Pageable(pageable => pageable
                //.Refresh(true)
                ////.PageSizes(new[] { 10, 20, 50, 100, 500 })
                //.ButtonCount(10))

                .Pageable(pageable => pageable
        // .PageSizes(new[] { 10, 50, 100, 500 })
        .Info(true)
        //.Messages(x => x.Display("{0}-{1} from {2} Cross Reference Records").Empty("No Results"))
        .Enabled(true)
        .PreviousNext(true)
        .Input(true)
        .Numeric(true)
        //.PageSizes(true)
        .ButtonCount(8)
        .Refresh(true)
        )
        .DataSource(dataSource => dataSource
            .Ajax()
            //.PageSize(20)
            .Sort(x => x.Add(y => y.Name).Descending())
            .Read(read => read.Action("Peson_Read", "Person"))
        )
    )
</div>

<script>

    function OpenWindowEdit(id, editUrl) {

        $.get(editUrl, { id: id }, function (data) {
            debugger;
            $("#form").html(data);

        });
    }




    function DeleteAlert(controller, id) {

        if (confirm('ایا از حذف کاربر اطمینان دارید؟')) {
            $.post(("Person/Delete"), { id: id }, function (data) {
                if (data) {
                    refreshGrid("#grid_Person");
                    ShowAlertToast(0, "کاربر با موفقیت حذف شد");
                }else

                ShowAlertToast(1, "شکست در حذف کاربر");

            });

        }

    }
</script>
